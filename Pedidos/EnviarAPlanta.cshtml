@{
    var Usuario = WebSecurity.CurrentUserName;
    
    Layout = "~/Inicio/_ConfluenciaLayout.cshtml";
    var db = Database.Open("IntranetConnectionNew");
    
    // Obtener pedidos listos para enviar a planta
    var pedidos = db.Query(@"
        SELECT P.IDPEDIDO, P.FECHA, P.APELLIDO_NOMBRE, P.ARTICULO, P.CANTIDAD, P.DESTINO
        FROM PEDIDOS P
        WHERE P.ESTADO = 'LISTO PARA PLANTA'
        ORDER BY P.FECHA DESC");
    
    var mensaje = "";
    var tipoMensaje = "";
    
    if(IsPost) {
        AntiForgery.Validate();
        
        try {
            // Obtener plantas disponibles
            var idPlanta = Request.Form["idPlanta"].AsInt();
            var pedidosSeleccionados = Request.Form.GetValues("pedidosSeleccionados");
            
            if (pedidosSeleccionados == null || pedidosSeleccionados.Length == 0) {
                throw new Exception("Debe seleccionar al menos un pedido");
            }
            
            if (idPlanta <= 0) {
                throw new Exception("Debe seleccionar una planta destino");
            }
            
            // Obtener ID del usuario
            int idUsuario = 0;
            if (!string.IsNullOrEmpty(Usuario)) {
                idUsuario = db.QueryValue("SELECT ID FROM USERS_TABLE WHERE LOWER(Usuario) = LOWER(@0)", Usuario) ?? 0;
            }
            
            // Procesar cada pedido seleccionado
            int procesados = 0;
            foreach (var idPedidoStr in pedidosSeleccionados) {
                int idPedido = int.Parse(idPedidoStr);
                
                // Obtener datos del pedido
                var pedido = db.QuerySingle("SELECT * FROM PEDIDOS WHERE IDPEDIDO = @0", idPedido);
                
// Generar número de remito
var formatoNumeroRemito = db.QueryValue("SELECT VALOR FROM SISTEMA_CONFIG WHERE CLAVE = 'FORMATO_NUMERO_REMITO'") ?? "R-{0:00000000}";

// Obtener el último número - con protección contra nulos
var ultimoNumeroObj = db.QueryValue("SELECT MAX(CAST(REPLACE(REPLACE(NUMERO, 'R-', ''), ' ', '') AS INT)) FROM REMITOS");
int ultimoNumero = 0;

// Verificar si el valor es nulo
if (ultimoNumeroObj != null && ultimoNumeroObj != DBNull.Value)
{
    ultimoNumero = Convert.ToInt32(ultimoNumeroObj);
}

var nuevoNumero = string.Format(formatoNumeroRemito, ultimoNumero + 1);

                // Insertar remito
                int idRemito = db.QueryValue(@"INSERT INTO REMITOS (
                                           NUMERO, FECHA_CREACION, IDPEDIDO, ID_PLANTA, 
                                           ID_USUARIO_CREACION, ESTADO, OBSERVACIONES) 
                                           VALUES (
                                           @0, @1, @2, @3, @4, @5, @6);
                                           SELECT SCOPE_IDENTITY();",
                                        nuevoNumero, DateTime.Now, idPedido, idPlanta,
                                        idUsuario, "PENDIENTE", "Generado automáticamente");
                
// Insertar detalle del remito
db.Execute(@"INSERT INTO REMITOS_DETALLE (
          IDREMITO, ARTICULO, CANTIDAD, USO_HORMIGON)
          VALUES (@0, @1, @2, @3)",
        idRemito, pedido.ARTICULO, pedido.CANTIDAD, pedido.USO_HORMIGON);
                
                // Actualizar estado del pedido
                db.Execute("UPDATE PEDIDOS SET ESTADO = 'ENVIADO A PLANTA', FECHA_ULT_MOD = @0 WHERE IDPEDIDO = @1", DateTime.Now, idPedido);
                
                // Registrar el cambio de estado en el historial
                db.Execute(@"INSERT INTO PEDIDOS_ESTADOS (IDPEDIDO, ESTADO, FECHA_CAMBIO, USUARIO_CAMBIO, OBSERVACIONES) 
                           VALUES (@0, @1, @2, @3, @4)", 
                          idPedido, "ENVIADO A PLANTA", DateTime.Now, idUsuario, "Remito generado: " + nuevoNumero);
                
                procesados++;
            }
            
            mensaje = "Se han generado remitos para " + procesados + " pedidos seleccionados";
            tipoMensaje = "success";
        }
        catch (Exception ex) {
            mensaje = "Error: " + ex.Message;
            tipoMensaje = "danger";
        }
    }
    
    // Obtener plantas disponibles
var plantas = db.Query("SELECT ID, NOMBRE FROM PLANTAS WHERE CAST(ESTADO AS INT) = 1 ORDER BY NOMBRE");
}

<div class="d-flex mb-2">
    <span class="fa-stack me-2 ms-n1">
        <i class="fas fa-circle fa-stack-2x text-300"></i>
        <i class="fa-inverse fa-stack-1x text-primary fas fa-truck-loading"></i>
    </span>
    <div class="col">
        <h5 class="mb-0 text-primary position-relative">
            <span class="bg-200 dark__bg-1100 pe-3">Enviar Pedidos a Planta</span>
            <span class="border position-absolute top-50 translate-middle-y w-100 start-0 z-n1"></span>
        </h5>
        <p class="mb-0">Seleccione los pedidos que desea enviar a planta</p>
    </div>
</div>

@if (!string.IsNullOrEmpty(mensaje)) {
    <div class="alert alert-@tipoMensaje alert-dismissible fade show" role="alert">
        <strong>@(tipoMensaje == "success" ? "¡Éxito!" : "¡Error!")</strong> @mensaje
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<form method="post" id="formEnviarPedidos">
    @AntiForgery.GetHtml()
    
    <div class="card mb-3">
        <div class="card-header bg-light">
            <h6 class="mb-0">Seleccione Planta Destino</h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <label class="form-label" for="idPlanta">Planta *</label>
                    <select class="form-select" id="idPlanta" name="idPlanta" required>
                        <option value="">Seleccione una planta</option>
                        @foreach (var planta in plantas) {
                            <option value="@planta.ID">@planta.NOMBRE</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
    
    <div class="card mb-3">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h6 class="mb-0">Pedidos Disponibles</h6>
            <div>
                <button type="button" class="btn btn-falcon-primary btn-sm" id="seleccionarTodos">
                    <i class="fas fa-check-square me-1"></i>Seleccionar Todos
                </button>
                <button type="button" class="btn btn-falcon-secondary btn-sm" id="deseleccionarTodos">
                    <i class="fas fa-square me-1"></i>Deseleccionar Todos
                </button>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover table-striped table-sm fs--1 mb-0" id="tablaPedidos">
                    <thead class="bg-200 text-900">
                        <tr>
                            <th style="width: 50px;">
                                <div class="form-check mb-0">
                                    <input class="form-check-input" type="checkbox" id="checkAll" />
                                </div>
                            </th>
                            <th>ID</th>
                            <th>Fecha</th>
                            <th>Cliente</th>
                            <th>Artículo</th>
                            <th>Cantidad</th>
                            <th>Destino</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (pedidos.Count() > 0) {
                            foreach (var pedido in pedidos) {
                                <tr>
                                    <td>
                                        <div class="form-check mb-0">
                                            <input class="form-check-input pedido-check" type="checkbox" name="pedidosSeleccionados" value="@pedido.IDPEDIDO" />
                                        </div>
                                    </td>
                                    <td>@pedido.IDPEDIDO</td>
                                    <td>@string.Format("{0:dd/MM/yyyy}", pedido.FECHA)</td>
                                    <td>@pedido.APELLIDO_NOMBRE</td>
                                    <td>@pedido.ARTICULO</td>
                                    <td>@pedido.CANTIDAD</td>
                                    <td>@pedido.DESTINO</td>
                                </tr>
                            }
                        } else {
                            <tr>
                                <td colspan="7" class="text-center py-3">No hay pedidos listos para enviar a planta</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer bg-light">
            <div class="d-flex justify-content-between">
                <a href="~/Pedidos/Index.cshtml" class="btn btn-falcon-default">
                    <i class="fas fa-arrow-left me-1"></i>Volver
                </a>
                @if (pedidos.Count() > 0) {
                    <button type="submit" class="btn btn-falcon-success" id="btnGenerarRemitos">
                        <i class="fas fa-truck me-1"></i>Generar Remitos para Seleccionados
                    </button>
                }
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Inicializar DataTable
            var table = $('#tablaPedidos').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json'
                },
                dom: "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
                     "<'row'<'col-sm-12'tr>>" +
                     "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                lengthMenu: [10, 25, 50, 100],
                order: [[1, 'desc']]
            });
            
            // Seleccionar/Deseleccionar Todos
            $('#checkAll').change(function() {
                $('.pedido-check').prop('checked', $(this).prop('checked'));
            });
            
            // Botones de seleccionar/deseleccionar
            $('#seleccionarTodos').click(function() {
                $('.pedido-check').prop('checked', true);
                $('#checkAll').prop('checked', true);
            });
            
            $('#deseleccionarTodos').click(function() {
                $('.pedido-check').prop('checked', false);
                $('#checkAll').prop('checked', false);
            });
            
            // Validación del formulario
            $('#formEnviarPedidos').submit(function(event) {
                var checkedPedidos = $('.pedido-check:checked').length;
                if (checkedPedidos === 0) {
                    alert('Debe seleccionar al menos un pedido');
                    event.preventDefault();
                    return false;
                }
                
                if ($('#idPlanta').val() === '') {
                    alert('Debe seleccionar una planta destino');
                    event.preventDefault();
                    return false;
                }
                
                return true;
            });
        });
    </script>
}