@{
    var Usuario = WebSecurity.CurrentUserName;
    
    Layout = "~/Inicio/_ConfluenciaLayout.cshtml";
    var db = Database.Open("IntranetConnectionNew");
    
    var idArticulo = Request.QueryString["id"].AsInt();
    
    // Obtener datos del artículo
    var articulo = db.QuerySingle("SELECT * FROM ARTICULOS WHERE ID = @0", idArticulo);
    
    if (articulo == null) {
        Response.Redirect("~/Pedidos/Articulos/Index.cshtml");
    }
    
    var mensaje = "";
    var tipoMensaje = "";
    
    if(IsPost) {
        AntiForgery.Validate();
        
        try {
            // Obtener datos del formulario
            var codigo = Request.Form["codigo"];
            var descripcion = Request.Form["descripcion"];
            var unidadMedida = Request.Form["unidadMedida"];
            var precioUnitario = Request.Form["precioUnitario"].AsDecimal();
            var observaciones = Request.Form["observaciones"];
            
            // Validar datos obligatorios
            if (string.IsNullOrEmpty(codigo)) {
                throw new Exception("El código del artículo es obligatorio");
            }
            
            if (string.IsNullOrEmpty(descripcion)) {
                throw new Exception("La descripción del artículo es obligatoria");
            }
            
            // Verificar si ya existe otro artículo con el mismo código
            var articuloExistente = db.QueryValue("SELECT COUNT(*) FROM ARTICULOS WHERE CODIGO = @0 AND ID != @1", codigo, idArticulo);
            if (articuloExistente > 0) {
                throw new Exception("Ya existe otro artículo con el código " + codigo);
            }
            
            // Actualizar artículo
            string sqlArticulo = @"UPDATE ARTICULOS SET 
                                  CODIGO = @0, 
                                  DESCRIPCION = @1, 
                                  UNIDAD_MEDIDA = @2, 
                                  PRECIO_UNITARIO = @3, 
                                  OBSERVACIONES = @4
                                  WHERE ID = @5";
            
            db.Execute(sqlArticulo, 
                codigo, descripcion, unidadMedida, precioUnitario,
                observaciones, idArticulo);
            
            mensaje = "Artículo actualizado correctamente";
            tipoMensaje = "success";
            
            // Actualizar objeto para mostrar los nuevos valores
            articulo = db.QuerySingle("SELECT * FROM ARTICULOS WHERE ID = @0", idArticulo);
        }
        catch (Exception ex) {
            mensaje = "Error al actualizar el artículo: " + ex.Message;
            tipoMensaje = "danger";
        }
    }
}

<div class="d-flex mb-2">
    <span class="fa-stack me-2 ms-n1">
        <i class="fas fa-circle fa-stack-2x text-300"></i>
        <i class="fa-inverse fa-stack-1x text-primary fas fa-edit"></i>
    </span>
    <div class="col">
        <h5 class="mb-0 text-primary position-relative">
            <span class="bg-200 dark__bg-1100 pe-3">Editar Artículo</span>
            <span class="border position-absolute top-50 translate-middle-y w-100 start-0 z-n1"></span>
        </h5>
        <p class="mb-0">Modifique la información del artículo</p>
    </div>
</div>

@if (!string.IsNullOrEmpty(mensaje)) {
    <div class="alert alert-@tipoMensaje alert-dismissible fade show" role="alert">
        <strong>@(tipoMensaje == "success" ? "¡Éxito!" : "¡Error!")</strong> @mensaje
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<form method="post" id="formArticulo" class="needs-validation" novalidate>
    @AntiForgery.GetHtml()
    
    <div class="card mb-3">
        <div class="card-header bg-light">
            <div class="row justify-content-between align-items-center">
                <div class="col-auto">
                    <h6 class="mb-0">Información del Artículo</h6>
                </div>
                <div class="col-auto">
                    <div class="badge bg-@(articulo.ACTIVO == true ? "success" : "danger")">
                        @(articulo.ACTIVO == true ? "Activo" : "Inactivo")
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <label class="form-label" for="codigo">Código *</label>
                    <input type="text" class="form-control" id="codigo" name="codigo" value="@articulo.CODIGO" required>
                    <div class="invalid-feedback">Este campo es obligatorio</div>
                </div>
                <div class="col-md-8">
                    <label class="form-label" for="descripcion">Descripción *</label>
                    <input type="text" class="form-control" id="descripcion" name="descripcion" value="@articulo.DESCRIPCION" required>
                    <div class="invalid-feedback">Este campo es obligatorio</div>
                </div>
                <div class="col-md-4">
                    <label class="form-label" for="unidadMedida">Unidad de Medida</label>
                    <input type="text" class="form-control" id="unidadMedida" name="unidadMedida" value="@articulo.UNIDAD_MEDIDA">
                </div>
                <div class="col-md-4">
                    <label class="form-label" for="precioUnitario">Precio Unitario</label>
                    <div class="input-group">
                        <span class="input-group-text">$</span>
                        <input type="number" class="form-control" id="precioUnitario" name="precioUnitario" min="0" step="0.01" value="@articulo.PRECIO_UNITARIO">
                    </div>
                </div>
                <div class="col-12">
                    <label class="form-label" for="observaciones">Observaciones</label>
                    <textarea class="form-control" id="observaciones" name="observaciones" rows="3">@articulo.OBSERVACIONES</textarea>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between mb-3">
        <a href="~/Pedidos/Articulos/Index.cshtml" class="btn btn-falcon-default">
            <i class="fas fa-arrow-left me-1"></i>Volver
        </a>
        <div>
            <a href="~/Pedidos/Articulos/CambiarEstadoArticulo.cshtml?id=@idArticulo" class="btn btn-falcon-@(articulo.ACTIVO == true ? "warning" : "success") me-2">
                <i class="fas fa-toggle-@(articulo.ACTIVO == true ? "off" : "on") me-1"></i>@(articulo.ACTIVO == true ? "Desactivar" : "Activar")
            </a>
            <button type="submit" class="btn btn-falcon-primary">
                <i class="fas fa-save me-1"></i>Guardar Cambios
            </button>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Validación del formulario
            $('#formArticulo').submit(function(event) {
                if (!this.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                $(this).addClass('was-validated');
            });
            
            // Convertir a mayúsculas el código
            $('#codigo').on('input', function() {
                this.value = this.value.toUpperCase();
            });
        });
    </script>
}