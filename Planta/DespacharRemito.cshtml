@{
    var Usuario = WebSecurity.CurrentUserName;
    
    Layout = "~/Inicio/_ConfluenciaLayout.cshtml";
    var db = Database.Open("IntranetConnectionNew");
    
    var idRemito = Request.QueryString["id"].AsInt();
    
    // Obtener datos del remito
    var remito = db.QuerySingle(@"
        SELECT r.*, p.IDPEDIDO, p.APELLIDO_NOMBRE AS CLIENTE, 
               p.ARTICULO AS ARTICULO_PEDIDO, p.CANTIDAD AS CANTIDAD_PEDIDO,
               pl.NOMBRE AS PLANTA_NOMBRE
        FROM REMITOS r
        INNER JOIN PEDIDOS p ON r.IDPEDIDO = p.IDPEDIDO
        LEFT JOIN PLANTAS pl ON r.ID_PLANTA = pl.ID
        WHERE r.ID = @0", idRemito);
    
    if (remito == null) {
        Response.Redirect("~/Planta/RemitosLista.cshtml");
    }
    
    // Obtener detalle del remito
    var detalles = db.Query("SELECT * FROM REMITOS_DETALLE WHERE ID_REMITO = @0", idRemito);
    
    // Verificar si ya hay un remito generado para mostrar mensaje
    bool remitosExistentes = db.QueryValue(@"
        SELECT COUNT(*) FROM REMITOS 
        WHERE IDPEDIDO = @0 AND ID != @1", remito.IDPEDIDO, idRemito) > 0;
    
    var mensaje = "";
    var tipoMensaje = "";
    
    if(IsPost) {
        AntiForgery.Validate();
        
        try {
            var accion = Request.Form["accion"];
            
            if (accion == "preparar" && remito.ESTADO == "PENDIENTE") {
                // Cambiar a estado EN PREPARACION
                db.Execute("UPDATE REMITOS SET ESTADO = 'EN PREPARACION' WHERE ID = @0", idRemito);
                mensaje = "Remito cambiado a estado EN PREPARACION";
                tipoMensaje = "success";
                remito.ESTADO = "EN PREPARACION"; // Actualizar el objeto para mostrar el formulario correcto
            }
            else if (accion == "despachar" && remito.ESTADO == "EN PREPARACION") {
                // Obtener datos del formulario
                var transportista = Request.Form["transportista"];
                var dominioCamion = Request.Form["dominioCamion"];
                var observaciones = Request.Form["observaciones"];
                
                // Validaciones
                if (string.IsNullOrEmpty(transportista)) {
                    throw new Exception("Debe ingresar el transportista");
                }
                
                // Obtener ID del usuario
                int idUsuario = 0;
                if (!string.IsNullOrEmpty(Usuario)) {
                    idUsuario = db.QueryValue("SELECT ID FROM USERS_TABLE WHERE LOWER(Usuario) = LOWER(@0)", Usuario) ?? 0;
                }
                
                // Cambiar a estado ENVIADO
                db.Execute(@"UPDATE REMITOS SET 
                            ESTADO = 'ENVIADO', 
                            TRANSPORTISTA = @0, 
                            DOMINIO_CAMION = @1, 
                            FECHA_DESPACHO = @2, 
                            ID_USUARIO_DESPACHO = @3, 
                            OBSERVACIONES = @4 
                            WHERE ID = @5", 
                          transportista, dominioCamion, DateTime.Now, idUsuario, observaciones, idRemito);
                
                mensaje = "Remito despachado correctamente";
                tipoMensaje = "success";
                remito.ESTADO = "ENVIADO"; // Actualizar el objeto para mostrar el formulario correcto
            }
            else if (accion == "entregar" && remito.ESTADO == "ENVIADO") {
                // Cambiar a estado ENTREGADO
                db.Execute("UPDATE REMITOS SET ESTADO = 'ENTREGADO', FECHA_ENTREGA = @0 WHERE ID = @1", 
                          DateTime.Now, idRemito);
                
                // Verificar si todos los remitos están entregados para actualizar el pedido
                var todosEntregados = db.QueryValue(@"
                    SELECT CASE WHEN COUNT(*) = COUNT(CASE WHEN ESTADO = 'ENTREGADO' THEN 1 END) 
                           THEN 1 ELSE 0 END
                    FROM REMITOS
                    WHERE IDPEDIDO = @0", remito.IDPEDIDO);
                
                if (todosEntregados == 1) {
                    // Obtener ID del usuario
                    int idUsuario = 0;
                    if (!string.IsNullOrEmpty(Usuario)) {
                        idUsuario = db.QueryValue("SELECT ID FROM USERS_TABLE WHERE LOWER(Usuario) = LOWER(@0)", Usuario) ?? 0;
                    }
                    
                    // Cambiar estado del pedido a ENTREGADO
                    db.Execute("UPDATE PEDIDOS SET ESTADO = 'ENTREGADO' WHERE IDPEDIDO = @0", remito.IDPEDIDO);
                    
                    // Registrar el cambio de estado en el historial
                    db.Execute(@"INSERT INTO PEDIDOS_ESTADOS (IDPEDIDO, ESTADO, FECHA_CAMBIO, USUARIO_CAMBIO, OBSERVACIONES) 
                               VALUES (@0, @1, @2, @3, @4)", 
                               remito.IDPEDIDO, "ENTREGADO", DateTime.Now, idUsuario, "Todos los remitos entregados");
                }
                
                mensaje = "Remito marcado como ENTREGADO correctamente";
                tipoMensaje = "success";
                remito.ESTADO = "ENTREGADO"; // Actualizar el objeto para mostrar el formulario correcto
            }
        }
        catch (Exception ex) {
            mensaje = "Error: " + ex.Message;
            tipoMensaje = "danger";
        }
    }
}

<div class="d-flex mb-2">
    <span class="fa-stack me-2 ms-n1">
        <i class="fas fa-circle fa-stack-2x text-300"></i>
        <i class="fa-inverse fa-stack-1x text-primary fas fa-truck-loading"></i>
    </span>
    <div class="col">
        <h5 class="mb-0 text-primary position-relative">
            <span class="bg-200 dark__bg-1100 pe-3">Gestionar Remito #@remito.NUMERO</span>
            <span class="border position-absolute top-50 translate-middle-y w-100 start-0 z-n1"></span>
        </h5>
        <p class="mb-0">
            Estado actual: 
            <span class="badge bg-@(remito.ESTADO == "PENDIENTE" ? "warning" : 
                                 remito.ESTADO == "EN PREPARACION" ? "info" : 
                                 remito.ESTADO == "ENVIADO" ? "primary" : 
                                 remito.ESTADO == "ENTREGADO" ? "success" : "secondary")">
                @remito.ESTADO
            </span>
        </p>
    </div>
</div>

<!-- Notificaciones -->
@if (!string.IsNullOrEmpty(mensaje)) {
    <div class="alert alert-@tipoMensaje alert-dismissible fade show" role="alert">
        <strong>@(tipoMensaje == "success" ? "¡Éxito!" : "¡Error!")</strong> @mensaje
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="row g-3">
    <div class="col-lg-8">
        <!-- Información del Remito -->
        <div class="card mb-3">
            <div class="card-header bg-light">
                <h6 class="mb-0">Información del Remito</h6>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <p class="mb-1"><strong>Nº Remito:</strong> @remito.NUMERO</p>
                        <p class="mb-1"><strong>Fecha Creación:</strong> @string.Format("{0:dd/MM/yyyy HH:mm}", remito.FECHA_CREACION)</p>
                        <p class="mb-1"><strong>Cliente:</strong> @remito.CLIENTE</p>
                        <p class="mb-1"><strong>Planta:</strong> @remito.PLANTA_NOMBRE</p>
                    </div>
                    <div class="col-md-6">
                        <p class="mb-1"><strong>Nº Pedido:</strong> @remito.IDPEDIDO</p>
                        <p class="mb-1"><strong>Estado:</strong> 
                            <span class="badge bg-@(remito.ESTADO == "PENDIENTE" ? "warning" : 
                                             remito.ESTADO == "EN PREPARACION" ? "info" : 
                                             remito.ESTADO == "ENVIADO" ? "primary" : 
                                             remito.ESTADO == "ENTREGADO" ? "success" : "secondary")">
                                @remito.ESTADO
                            </span>
                        </p>
                        @if (!string.IsNullOrEmpty(remito.TRANSPORTISTA)) {
                            <p class="mb-1"><strong>Transportista:</strong> @remito.TRANSPORTISTA</p>
                        }
                        @if (!string.IsNullOrEmpty(remito.DOMINIO_CAMION)) {
                            <p class="mb-1"><strong>Dominio:</strong> @remito.DOMINIO_CAMION</p>
                        }
                    </div>
                    
                    @if (!string.IsNullOrEmpty(remito.OBSERVACIONES)) {
                        <div class="col-12">
                            <p class="mb-1"><strong>Observaciones:</strong> @remito.OBSERVACIONES</p>
                        </div>
                    }
                </div>
            </div>
        </div>
        
        <!-- Detalle del Remito -->
        <div class="card mb-3">
            <div class="card-header bg-light">
                <h6 class="mb-0">Detalle del Remito</h6>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-sm table-striped mb-0">
                        <thead class="bg-200">
                            <tr>
                                <th>Artículo</th>
                                <th>Cantidad</th>
                                <th>Uso Hormigón</th>
                                <th>Observaciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detalle in detalles) {
                                <tr>
                                    <td>@detalle.ARTICULO</td>
                                    <td>@detalle.CANTIDAD</td>
                                    <td>@(string.IsNullOrEmpty(detalle.USO_HORMIGON) ? "No especificado" : detalle.USO_HORMIGON)</td>
                                    <td>@(string.IsNullOrEmpty(detalle.OBSERVACIONES) ? "Sin observaciones" : detalle.OBSERVACIONES)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        
        <!-- Formulario de Preparación/Despacho/Entrega -->
        @if (remito.ESTADO == "PENDIENTE") {
            <form method="post" id="formPreparar">
                @AntiForgery.GetHtml()
                <div class="card mb-3">
                    <div class="card-header bg-light">
                        <h6 class="mb-0">Iniciar Preparación</h6>
                    </div>
                    <div class="card-body">
                        <p>El remito está en estado <span class="badge bg-warning">PENDIENTE</span>. Para iniciar la preparación, haga clic en el botón "Iniciar Preparación".</p>
                    </div>
                    <div class="card-footer bg-light d-flex justify-content-between">
                        <input type="hidden" name="accion" value="preparar">
                        <a href="~/Planta/RemitosLista.cshtml" class="btn btn-falcon-default">
                            <i class="fas fa-arrow-left me-1"></i>Volver
                        </a>
                        <button type="submit" class="btn btn-falcon-info">
                            <i class="fas fa-box me-1"></i>Iniciar Preparación
                        </button>
                    </div>
                </div>
            </form>
        }
        else if (remito.ESTADO == "EN PREPARACION") {
            <form method="post" id="formDespachar" class="needs-validation" novalidate>
                @AntiForgery.GetHtml()
                <div class="card mb-3">
                    <div class="card-header bg-light">
                        <h6 class="mb-0">Despachar Remito</h6>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label class="form-label" for="transportista">Transportista *</label>
                                <input type="text" class="form-control" id="transportista" name="transportista" required>
                                <div class="invalid-feedback">Este campo es obligatorio</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label" for="dominioCamion">Dominio del Camión</label>
                                <input type="text" class="form-control" id="dominioCamion" name="dominioCamion">
                            </div>
                            <div class="col-12">
                                <label class="form-label" for="observaciones">Observaciones</label>
                                <textarea class="form-control" id="observaciones" name="observaciones" rows="3"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer bg-light d-flex justify-content-between">
                        <input type="hidden" name="accion" value="despachar">
                        <a href="~/Planta/RemitosLista.cshtml" class="btn btn-falcon-default">
                            <i class="fas fa-arrow-left me-1"></i>Volver
                        </a>
                        <button type="submit" class="btn btn-falcon-primary">
                            <i class="fas fa-truck me-1"></i>Despachar Remito
                        </button>
                    </div>
                </div>
            </form>
        }
else if (accion == "entregar" && remito.ESTADO == "ENVIADO") {
    // Cambiar a estado ENTREGADO
    db.Execute("UPDATE REMITOS SET ESTADO = 'ENTREGADO', FECHA_ENTREGA = @0 WHERE ID = @1", 
              DateTime.Now, idRemito);
    
    // Verificar si todos los remitos están entregados para actualizar el pedido
    var todosEntregados = db.QueryValue(@"
        SELECT CASE WHEN COUNT(*) = COUNT(CASE WHEN ESTADO = 'ENTREGADO' THEN 1 END) 
               THEN 1 ELSE 0 END
        FROM REMITOS
        WHERE IDPEDIDO = @0", remito.IDPEDIDO);
    
    if (todosEntregados == 1) {
        // Obtener ID del usuario
        int idUsuario = 0;
        if (!string.IsNullOrEmpty(Usuario)) {
            idUsuario = db.QueryValue("SELECT ID FROM USERS_TABLE WHERE LOWER(Usuario) = LOWER(@0)", Usuario) ?? 0;
        }
        
        // Cambiar estado del pedido a ENTREGADO
        db.Execute("UPDATE PEDIDOS SET ESTADO = 'ENTREGADO', FECHA_ULT_MOD = @0 WHERE IDPEDIDO = @1", DateTime.Now, remito.IDPEDIDO);
        
        // Registrar el cambio de estado en el historial
        db.Execute(@"INSERT INTO PEDIDOS_ESTADOS (IDPEDIDO, ESTADO, FECHA_CAMBIO, USUARIO_CAMBIO, OBSERVACIONES) 
                   VALUES (@0, @1, @2, @3, @4)", 
                   remito.IDPEDIDO, "ENTREGADO", DateTime.Now, idUsuario, "Todos los remitos entregados");
    }
    
    mensaje = "Remito marcado como ENTREGADO correctamente";
    tipoMensaje = "success";
    remito.ESTADO = "ENTREGADO"; // Actualizar el objeto para mostrar el formulario correcto
}
        else if (remito.ESTADO == "ENTREGADO") {
            <div class="card mb-3">
                <div class="card-body">
                    <div class="text-center py-4">
                        <div class="avatar avatar-4xl mb-3">
                            <div class="avatar-name rounded-circle bg-soft-success text-success">
                                <span class="fs-1 fas fa-check"></span>
                            </div>
                        </div>
                        <h5 class="mb-0">Remito Entregado</h5>
                        <p class="mb-0">Este remito ya fue entregado y no requiere acciones adicionales.</p>
                        <p class="mb-0">Fecha de entrega: @(remito.FECHA_ENTREGA != null ? string.Format("{0:dd/MM/yyyy HH:mm}", remito.FECHA_ENTREGA) : "No registrada")</p>
                    </div>
                </div>
                <div class="card-footer bg-light">
                    <div class="d-flex justify-content-between">
                        <a href="~/Planta/RemitosLista.cshtml" class="btn btn-falcon-default">
                            <i class="fas fa-arrow-left me-1"></i>Volver
                        </a>
                        <a href="~/Pedidos/DetallePedido.cshtml?id=@remito.IDPEDIDO" class="btn btn-falcon-info">
                            <i class="fas fa-clipboard-list me-1"></i>Ver Pedido
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>
    
    <div class="col-lg-4">
        <!-- Estado del Proceso -->
        <div class="card mb-3">
            <div class="card-header bg-light">
                <h6 class="mb-0">Estado del Proceso</h6>
            </div>
            <div class="card-body">
                <div class="timeline timeline-vertical">
                    <div class="timeline-item position-relative">
                        <div class="timeline-icon icon-item @(remito.ESTADO != "PENDIENTE" ? "bg-success" : "bg-primary")">
                            <i class="fas @(remito.ESTADO != "PENDIENTE" ? "fa-check" : "fa-hourglass-start") text-white"></i>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 timeline-item-content">
                                <div class="timeline-item-card">
                                    <h6 class="mb-0 @(remito.ESTADO != "PENDIENTE" ? "text-success" : "text-primary")">Pendiente</h6>
                                    <p class="fs--1 mb-0">Remito recibido en planta</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="timeline-item position-relative">
                        <div class="timeline-icon icon-item @(remito.ESTADO == "EN PREPARACION" ? "bg-primary" : (remito.ESTADO == "PENDIENTE" ? "bg-secondary" : "bg-success"))">
                            <i class="fas @(remito.ESTADO == "PENDIENTE" ? "fa-box" : (remito.ESTADO == "EN PREPARACION" ? "fa-box" : "fa-check")) text-white"></i>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 timeline-item-content">
                                <div class="timeline-item-card">
                                    <h6 class="mb-0 @(remito.ESTADO == "EN PREPARACION" ? "text-primary" : (remito.ESTADO == "PENDIENTE" ? "text-secondary" : "text-success"))">En Preparación</h6>
                                    <p class="fs--1 mb-0">Preparando materiales para despacho</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="timeline-item position-relative">
                        <div class="timeline-icon icon-item @(remito.ESTADO == "ENVIADO" ? "bg-primary" : (remito.ESTADO == "ENTREGADO" ? "bg-success" : "bg-secondary"))">
                            <i class="fas @(remito.ESTADO == "ENVIADO" ? "fa-truck" : (remito.ESTADO == "ENTREGADO" ? "fa-check" : "fa-truck")) text-white"></i>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 timeline-item-content">
                                <div class="timeline-item-card">
                                    <h6 class="mb-0 @(remito.ESTADO == "ENVIADO" ? "text-primary" : (remito.ESTADO == "ENTREGADO" ? "text-success" : "text-secondary"))">Enviado</h6>
                                    <p class="fs--1 mb-0">Remito en tránsito hacia destino</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="timeline-item position-relative">
                        <div class="timeline-icon icon-item @(remito.ESTADO == "ENTREGADO" ? "bg-success" : "bg-secondary")">
                            <i class="fas @(remito.ESTADO == "ENTREGADO" ? "fa-check" : "fa-flag-checkered") text-white"></i>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 timeline-item-content">
                                <div class="timeline-item-card">
                                    <h6 class="mb-0 @(remito.ESTADO == "ENTREGADO" ? "text-success" : "text-secondary")">Entregado</h6>
                                    <p class="fs--1 mb-0">Remito entregado en destino</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Enlaces Rápidos -->
        <div class="card mb-3">
            <div class="card-header bg-light">
                <h6 class="mb-0">Enlaces Rápidos</h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="~/Pedidos/DetallePedido.cshtml?id=@remito.IDPEDIDO" class="btn btn-falcon-info">
                        <i class="fas fa-clipboard-list me-1"></i>Ver Pedido Original
                    </a>
                    @if (remito.ESTADO != "PENDIENTE") {
                        <a href="~/Planta/VerRemito.cshtml?id=@idRemito" class="btn btn-falcon-primary">
                            <i class="fas fa-file-invoice me-1"></i>Ver Detalle del Remito
                        </a>
                    }
                    <a href="~/Planta/RemitosLista.cshtml" class="btn btn-falcon-default">
                        <i class="fas fa-list me-1"></i>Ver Todos los Remitos
                    </a>
                </div>
            </div>
        </div>
        
        @if (remitosExistentes) {
            <div class="card mb-3">
                <div class="card-header bg-light">
                    <h6 class="mb-0">Información</h6>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning mb-0">
                        <i class="fas fa-exclamation-triangle me-1"></i>
                        Existen otros remitos asociados al mismo pedido. Verifique la información para evitar duplicidades.
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Validación del formulario de despacho
            $('#formDespachar').submit(function(event) {
                if (!this.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                $(this).addClass('was-validated');
            });
            
            // Confirmación para entrega
            $('#formEntregar').submit(function(event) {
                if (!confirm('¿Está seguro de que desea marcar este remito como ENTREGADO? Esta acción no se puede deshacer.')) {
                    event.preventDefault();
                }
            });
        });
    </script>
}